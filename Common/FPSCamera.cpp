//////////////////////////////////////////////////////////////////////////////////////////
//						  Dynamic Terrain Generation Prototype							//
//					  Written 2007 by Jon Wills (jc@chromaticaura.net)						//
//				Written for a Win32 environment using the DirectSound API.				//
//																						//
//				   Written at the University of Abertay Dundee, Scotland				//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//	FIRST PERSON CAMERA CLASS															//
//	Handles the prototype's FPS camera.													//
//////////////////////////////////////////////////////////////////////////////////////////

#include "FPSCamera.h"

//////////////////////////////////////////////////////////////////////////////////////////
//	CLASS HEADER
//////////////////////////////////////////////////////////////////////////////////////////

//	Constructor.  
//////////////////////////////////////////////////////////////////////////////////////////
FPSCamera::FPSCamera()
{
	// Sets the camera near the center of the island.  
	Camera = new GLCamera(	GLVertex(0.0f, 50.0f, 0.0f),
							GLVertex(0.0f, 25.0f, 5.0f));
}

//	Destructor.  
//////////////////////////////////////////////////////////////////////////////////////////
FPSCamera::~FPSCamera()
{
	delete this->Camera;
}

//	Function to set the OpenGL camera to that of the FPS camera.  
//////////////////////////////////////////////////////////////////////////////////////////
void FPSCamera::Look()
{
	Camera->Look();
}

//	Function to process input from the mouse.  
//////////////////////////////////////////////////////////////////////////////////////////
void FPSCamera::ProcessMouseInput(POINT MousePos, POINT OldMouse)
{
	// Passes the parameters to the camera's rotation system.  
	Camera->RotateByMouse(MousePos.x, MousePos.y, OldMouse.x, OldMouse.y);
}

//	Function to move the camera on the X-Z plane.  
//////////////////////////////////////////////////////////////////////////////////////////
void FPSCamera::MoveCamera(float amount)
{
	Camera->MoveCameraXZ(amount);
}

//	Function to strafe the camera.
//////////////////////////////////////////////////////////////////////////////////////////
void FPSCamera::StrafeCam(float amount)
{
	Camera->StrafeCam(amount);
}

//	Function to set a new height for the camera.  
//////////////////////////////////////////////////////////////////////////////////////////
void FPSCamera::SetHeight(float new_y)
{
	Camera->Position.y = new_y;
}