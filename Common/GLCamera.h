//////////////////////////////////////////////////////////////////////////////////////////
//						  Dynamic Terrain Generation Prototype							//
//					  Written 2007 by Jon Wills (jc@chromaticaura.net)						//
//				Written for a Win32 environment using the DirectSound API.				//
//																						//
//				   Written at the University of Abertay Dundee, Scotland				//
//////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
//	CAMERA CLASS HEADER																	//
//////////////////////////////////////////////////////////////////////////////////////////
//	IMPORTANT NOTE
//	A significant amount of the code below is taken from the project submitted in May 2006
//	as the project for Graphics Programming.  As a result, the class remains in the same
//	state it was in then - All new elements are commented thoroughly.  
//////////////////////////////////////////////////////////////////////////////////////////

#ifndef _GLCAMERA_H_
#define _GLCAMERA_H_

//////////////////////////////////////////////////////////////////////////////////////////
//	LIBRARY INCLUDE FILE
//	Refer to include.h for more details.
//////////////////////////////////////////////////////////////////////////////////////////
#include "Include.h"

//////////////////////////////////////////////////////////////////////////////////////////
//	EXTRA INCLUDE FILES
//////////////////////////////////////////////////////////////////////////////////////////
#include "GLVertex.h"		// Main OpenGL Vertex class.

//////////////////////////////////////////////////////////////////////////////////////////
//	CLASS DECLARATIONS
//	Declarations of the class and its members.  
//////////////////////////////////////////////////////////////////////////////////////////
class GLCamera
{
	public:
		GLCamera();										// Basic constructor.  
		GLCamera(GLVertex Position, GLVertex LookAt);	// Constructor based on a set position & focus point.  

		void Look();							// Updates the main GL viewinf with the camera.  
		void MoveCameraXZ(GLfloat direction);	// Moves the camera on an x-z plane.  
		void MoveCamera(GLfloat direction);		// Moves the camera in all three directions.  

		void StrafeCam(float direction);		// Strafes the camera in a direction.  

		// Rotates the camera based on mouse movement.  
		void RotateByMouse(int mousePosX, int mousePosY, int midX, int midY);

		GLVertex Position, LookAt;			// Vertices to hold positioning & focus point.  

	private:
		void SetCamera(GLVertex Position, GLVertex LookAt);	// Sets the camera at a particular point & direction.  
		void RotateCamera(float AngleDir, GLVertex Speed);	// Rotates the camera.  
		void CalculateStrafe();								// Calculates the components of strafing in a direction.  

	//////////////////////////////////////////////////////////////////////////////////////
	//	CLASS OBJECTS
	//////////////////////////////////////////////////////////////////////////////////////
		GLVertex Strafe;	// Component of the strafe direction when at a parrticular direction.  

	//////////////////////////////////////////////////////////////////////////////////////
	//	CLASS DATA
	//////////////////////////////////////////////////////////////////////////////////////
		float AngleRotation;				// Angle of Rotation.  
};

#endif